"""update tables for new api

Revision ID: fe8daff2936d
Revises: aac45d8d75d1
Create Date: 2025-01-09 18:03:42.096452

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fe8daff2936d'
down_revision: Union[str, None] = 'aac45d8d75d1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('telegram_user_id', sa.Integer(), nullable=False))
    op.add_column('users', sa.Column('fisrtname', sa.String(), nullable=False))
    op.add_column('users', sa.Column('lastname', sa.String(), nullable=False))
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.drop_constraint('users_login_key', 'users', type_='unique')
    op.create_unique_constraint(None, 'users', ['telegram_user_id'])
    op.drop_constraint('users_invite_id_fkey', 'users', type_='foreignkey')
    op.drop_column('users', 'status')
    op.drop_column('users', 'role')
    op.drop_column('users', 'email')
    op.drop_column('users', 'bio')
    op.drop_column('users', 'password')
    op.drop_column('users', 'invite_id')
    op.drop_column('users', 'login')
    op.drop_column('users', 'interests')
    op.drop_column('users', 'is_waiting')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_waiting', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('interests', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('login', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('invite_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('password', postgresql.BYTEA(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('bio', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('users_invite_id_fkey', 'users', 'invites', ['invite_id'], ['id'])
    op.drop_constraint(None, 'users', type_='unique')
    op.create_unique_constraint('users_login_key', 'users', ['login'])
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.drop_column('users', 'lastname')
    op.drop_column('users', 'fisrtname')
    op.drop_column('users', 'telegram_user_id')
    # ### end Alembic commands ###
